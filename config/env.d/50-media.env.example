###############################################
# Media Encryption Configuration (Version 2)  #
###############################################

# Generate a 32-byte key and base64 encode it:
#   Linux/macOS: head -c 32 /dev/urandom | base64
#   Windows (PowerShell): $bytes = New-Object byte[] 32; (New-Object System.Security.Cryptography.RNGCryptoServiceProvider).GetBytes($bytes); [Convert]::ToBase64String($bytes)

# === Single-Key Mode (simplest) ===
# Uncomment if you only need one key. Rotation later will require migrating to multi-key variable.
# MEDIA_ENCRYPTION_KEY=REPLACE_WITH_BASE64_32BYTE_KEY

# === Multi-Key Mode (recommended for future rotation) ===
# Provide one or more keys in the form id:base64, separated by commas. IDs must be 1..255 unique.
# The highest id is used automatically unless MEDIA_ENCRYPTION_ACTIVE_KEY overrides it.
# Example (three keys, active highest id=3):
# MEDIA_ENCRYPTION_KEYS=1:BASE64KEY_FOR_KEY1,2:BASE64KEY_FOR_KEY2,3:BASE64KEY_FOR_KEY3

# Optional explicit active key (must match one of the ids above). Normally you can omit this.
# MEDIA_ENCRYPTION_ACTIVE_KEY=3

# Rotation Strategy:
# 1. Add new key with higher id to MEDIA_ENCRYPTION_KEYS.
# 2. (Optional) Set MEDIA_ENCRYPTION_ACTIVE_KEY to force use of old key temporarily during rollout.
# 3. Remove oldest key only after all media re-encrypted (future tooling will assist).

# Security Notes:
# - Keys must be exactly 32 bytes before base64 (256-bit AES keys).
# - Store secrets outside version control (.env local files, secrets manager, etc.).
# - Never reuse keys between environments.

# This example file is not loaded directly; copy variables into your environment-specific config.
